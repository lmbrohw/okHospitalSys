<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fightlandlord.sys_back.dao.DoctorMapper">
  <resultMap id="BaseResultMap" type="com.fightlandlord.sys_back.model.Doctor">
    <id column="doctor_id" jdbcType="VARCHAR" property="doctorId" />
    <result column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="is_expert" jdbcType="INTEGER" property="isExpert" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="password" jdbcType="CHAR" property="password" />
  </resultMap>
  <sql id="Base_Column_List">
    doctor_id, department_id, gender, age, is_expert, name, password
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor
    where doctor_id = #{doctorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from doctor
    where doctor_id = #{doctorId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.fightlandlord.sys_back.model.Doctor">
    insert into doctor (doctor_id, department_id, gender, 
      age, is_expert, name, password
      )
    values (#{doctorId,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{isExpert,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{password,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fightlandlord.sys_back.model.Doctor">
    insert into doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="isExpert != null">
        is_expert,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="isExpert != null">
        #{isExpert,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fightlandlord.sys_back.model.Doctor">
    update doctor
    <set>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="isExpert != null">
        is_expert = #{isExpert,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
    </set>
    where doctor_id = #{doctorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fightlandlord.sys_back.model.Doctor">
    update doctor
    set department_id = #{departmentId,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      is_expert = #{isExpert,jdbcType=INTEGER},
      name = #{name,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR}
    where doctor_id = #{doctorId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.fightlandlord.sys_back.model.Doctor">
    <id column="doctor_id" jdbcType="VARCHAR" property="doctorId" />
    <result column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="is_expert" jdbcType="INTEGER" property="isExpert" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="password" jdbcType="CHAR" property="password" />
  </resultMap>
  <sql id="Base_Column_List">
    doctor_id, department_id, gender, age, is_expert, name, password
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor
    where doctor_id = #{doctorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from doctor
    where doctor_id = #{doctorId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.fightlandlord.sys_back.model.Doctor">
    insert into doctor (doctor_id, department_id, gender, 
      age, is_expert, name, password
      )
    values (#{doctorId,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{isExpert,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{password,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fightlandlord.sys_back.model.Doctor">
    insert into doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="isExpert != null">
        is_expert,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="isExpert != null">
        #{isExpert,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fightlandlord.sys_back.model.Doctor">
    update doctor
    <set>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="isExpert != null">
        is_expert = #{isExpert,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
    </set>
    where doctor_id = #{doctorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fightlandlord.sys_back.model.Doctor">
    update doctor
    set department_id = #{departmentId,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      is_expert = #{isExpert,jdbcType=INTEGER},
      name = #{name,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR}
    where doctor_id = #{doctorId,jdbcType=VARCHAR}
  </update>
</mapper>